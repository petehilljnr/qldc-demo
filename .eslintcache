[{"C:\\Data\\Projects\\qldc-demo\\qldc-demo\\src\\index.js":"1","C:\\Data\\Projects\\qldc-demo\\qldc-demo\\src\\App.js":"2","C:\\Data\\Projects\\qldc-demo\\qldc-demo\\src\\reportWebVitals.js":"3","C:\\Data\\Projects\\qldc-demo\\qldc-demo\\src\\components\\Sidebar.js":"4","C:\\Data\\Projects\\qldc-demo\\qldc-demo\\src\\pages\\Reports.js":"5","C:\\Data\\Projects\\qldc-demo\\qldc-demo\\src\\pages\\Overview.js":"6","C:\\Data\\Projects\\qldc-demo\\qldc-demo\\src\\pages\\Team.js":"7","C:\\Data\\Projects\\qldc-demo\\qldc-demo\\src\\components\\SubMenu.js":"8","C:\\Data\\Projects\\qldc-demo\\qldc-demo\\src\\components\\SidebarData.js":"9","C:\\Data\\Projects\\qldc-demo\\qldc-demo\\src\\pages\\Dashboard.js":"10"},{"size":500,"mtime":1606601106000,"results":"11","hashOfConfig":"12"},{"size":865,"mtime":1632791412149,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1606601106000,"results":"14","hashOfConfig":"12"},{"size":2007,"mtime":1632861453676,"results":"15","hashOfConfig":"12"},{"size":525,"mtime":1606601106000,"results":"16","hashOfConfig":"12"},{"size":160,"mtime":1606601106000,"results":"17","hashOfConfig":"12"},{"size":148,"mtime":1606601106000,"results":"18","hashOfConfig":"12"},{"size":1597,"mtime":1632699040816,"results":"19","hashOfConfig":"12"},{"size":4735,"mtime":1632697331618,"results":"20","hashOfConfig":"12"},{"size":5812,"mtime":1632865961888,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1039f6a",{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},"C:\\Data\\Projects\\qldc-demo\\qldc-demo\\src\\index.js",[],"C:\\Data\\Projects\\qldc-demo\\qldc-demo\\src\\App.js",["45"],"\nimport Sidebar from './components/Sidebar';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Overview from './pages/Overview';\nimport { Reports, ReportsOne, ReportsTwo, ReportsThree } from './pages/Reports';\nimport Team from './pages/Team';\nimport Dashboard from './pages/Dashboard';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Router>\n      <Sidebar />\n      <Switch>\n        <Route path='/overview' exact component={Overview} />\n        <Route path='/reports' exact component={Reports} />\n        <Route path='/reports/dashboard' exact component={Dashboard} />\n        <Route path='/reports/reports2' exact component={ReportsTwo} />\n        <Route path='/reports/reports3' exact component={ReportsThree} />\n        <Route path='/team' exact component={Team} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","C:\\Data\\Projects\\qldc-demo\\qldc-demo\\src\\reportWebVitals.js",[],"C:\\Data\\Projects\\qldc-demo\\qldc-demo\\src\\components\\Sidebar.js",["46","47","48","49","50"],"import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport * as FaIcons from 'react-icons/fa';\nimport * as AiIcons from 'react-icons/ai';\nimport { SidebarData } from './SidebarData';\nimport SubMenu from './SubMenu';\nimport { IconContext } from 'react-icons/lib';\nimport clientLogo from './qldc.png'\n\nconst Nav = styled.div`\n  background: #15171c;\n  height: 80px;\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  width: 100vw;\n`;\n\nconst SidebarNav = styled.nav`\n  background: #15171c;\n  width: 250px;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  position: fixed;\n  top: 80px;\n  left: 0;\n  transition: 350ms;\n  z-index: 10;\n`;\n\nconst SidebarWrap = styled.div`\n  width: 100%;\n`;\n\nconst TitleBar = styled.div`\n  margin-left: 1.5rem;\n  font-size: 1.5rem;\n  height: 80px;\n  display: flex;\n  align-items: center;\n  color: white;\n  width: 100%;\n`;\n\nconst LeftLogo = styled.div`\n  justify-content: flex-start;\n`;\n\nconst ClientTitle = styled.div`\n  margin-left: 150px;\n`;\n\nconst RightLogo = styled.div`\n  justify-content: flex-end;\n  align-items: right;\n`;\n\nconst Sidebar = () => {\n  //const [sidebar, setSidebar] = useState(false);\n  const sidebar = true;\n  //const showSidebar = () => setSidebar(!sidebar);\n\n  return (\n    <>\n      <IconContext.Provider value={{ color: '#fff' }}>\n        <Nav>\n          <TitleBar>\n            <LeftLogo>\n            <img src={clientLogo} alt=\"QLDC\" height={40} />\n            </LeftLogo>\n            <ClientTitle>\n            Minor Improvements 2021 - 2024\n            </ClientTitle>\n            <RightLogo>\n            \n            </RightLogo>\n          </TitleBar>\n        </Nav>\n        <SidebarNav>\n          <SidebarWrap>\n            {SidebarData.map((item, index) => {\n              return <SubMenu item={item} key={index} />;\n            })}\n          </SidebarWrap>\n        </SidebarNav>\n      </IconContext.Provider>\n    </>\n  );\n};\n\nexport default Sidebar;\n","C:\\Data\\Projects\\qldc-demo\\qldc-demo\\src\\pages\\Reports.js",[],"C:\\Data\\Projects\\qldc-demo\\qldc-demo\\src\\pages\\Overview.js",[],"C:\\Data\\Projects\\qldc-demo\\qldc-demo\\src\\pages\\Team.js",[],"C:\\Data\\Projects\\qldc-demo\\qldc-demo\\src\\components\\SubMenu.js",[],"C:\\Data\\Projects\\qldc-demo\\qldc-demo\\src\\components\\SidebarData.js",[],"C:\\Data\\Projects\\qldc-demo\\qldc-demo\\src\\pages\\Dashboard.js",["51","52"],"import React, { useEffect, useState } from \"react\";\r\nimport crossfilter from \"crossfilter2\";\r\nimport * as d3 from \"d3\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport { RowChart, ChartContext } from \"react-dc-js\";\r\n\r\nfunction Dashboard() {\r\n  const [cx, setCx] = useState(null);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const data = await d3.csv(\r\n        \"https://raw.githubusercontent.com/petehilljnr/qldc-demo/master/data/sites.csv\"\r\n      );\r\n      const dateFormatSpecifier = \"%m/%d/%Y\";\r\n      const dateFormatParser = d3.timeParse(dateFormatSpecifier);\r\n      data.forEach((d) => {\r\n        d.system_id = +d.system_id;\r\n        d.est_cost = +d.est_cost;\r\n        d.activity_class =\r\n          d.activity_class.length == 0 ? \"UNK\" : d.activity_class;\r\n      });\r\n\r\n      const cx = crossfilter(data);\r\n      setCx(cx);\r\n    })();\r\n  }, []);\r\n\r\n  if (!cx) {\r\n    return <p> Loading Data </p>;\r\n  }\r\n\r\n  const wardDim = cx.dimension((d) => d.ward);\r\n  const wardCount = wardDim.group().reduceCount();\r\n\r\n  const statusDim = cx.dimension((d) => d.status);\r\n  const statusCount = statusDim.group().reduceCount();\r\n\r\n  const activityDim = cx.dimension((d) => d.activity_class);\r\n  const activityCount = activityDim.group().reduceCount();\r\n\r\n  const outcomeDim = cx.dimension((d) => d.onrcoutcome);\r\n  const outcomeCount = outcomeDim.group().reduceCount();\r\n  \r\n  const ward2Dim = cx.dimension((d) => d.ward);\r\n  const ward2Count = ward2Dim.group().reduceSum(d => d.est_cost / 10000);\r\n\r\n  const status2Dim = cx.dimension((d) => d.status);\r\n  const status2Count = status2Dim.group().reduceSum(d => d.est_cost / 10000);\r\n\r\n  const activity2Dim = cx.dimension((d) => d.activity_class);\r\n  const activity2Count = activity2Dim.group().reduceSum(d => d.est_cost / 10000);\r\n\r\n  const outcome2Dim = cx.dimension((d) => d.onrcoutcome);\r\n  const outcome2Count = outcome2Dim.group().reduceSum(d => d.est_cost / 10000);\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <Container fluid>\r\n      <ChartContext>\r\n        <h2> Progress Dashboard </h2>\r\n        <h4> Site Counts </h4>\r\n        <Row>\r\n          <Col>            \r\n                  <p> Sites By Ward </p>\r\n                  <RowChart\r\n                    dimension={wardDim}\r\n                    group={wardCount}\r\n                    height={180}\r\n                    transitionDuration={300}\r\n                    elasticX={true}\r\n                    colors={\"#fcba03\"}\r\n                    title={(d) => `${d.key} : ${d.value} sites`}\r\n                  />\r\n                </Col>\r\n                <Col>\r\n                  <p> Sites by Status </p>\r\n                  <RowChart\r\n                    dimension={statusDim}\r\n                    group={statusCount}\r\n                    height={180}\r\n                    elasticX={true}\r\n                    colors={\"#fcba03\"}\r\n                    title={(d) => `${d.key} : ${d.value} sites`}\r\n                  />\r\n                </Col>\r\n                <Col>\r\n                  <p> Sites By Activity Class </p>\r\n                  <RowChart\r\n                    dimension={activityDim}\r\n                    group={activityCount}\r\n                    height={180}\r\n                    transitionDuration={300}\r\n                    elasticX={true}\r\n                    colors={\"#fcba03\"}\r\n                    title={(d) => `${d.key} : ${d.value} sites`}\r\n                  />\r\n                </Col>\r\n                <Col>\r\n                  <p> Sites by ONRC Outcome </p>\r\n                  <RowChart\r\n                    dimension={outcomeDim}\r\n                    group={outcomeCount}\r\n                    height={180}\r\n                    elasticX={true}\r\n                    colors={\"#fcba03\"}\r\n                    title={(d) => `${d.key} : ${d.value} sites`}\r\n                  />\r\n                </Col>\r\n        </Row>\r\n        <h4> Estimated Costs </h4>\r\n        <Row>\r\n          <Col>            \r\n                  <p> Cost By Ward </p>\r\n                  <RowChart\r\n                    dimension={ward2Dim}\r\n                    group={ward2Count}\r\n                    height={180}\r\n                    transitionDuration={300}\r\n                    elasticX={true}\r\n                    colors={\"#fcba03\"}\r\n                    title={(d) => `${d.key} : $ ${Math.round(d.value * 10000)} `}\r\n                  />\r\n                </Col>\r\n                <Col>\r\n                  <p> Cost by Status </p>\r\n                  <RowChart\r\n                    dimension={status2Dim}\r\n                    group={status2Count}\r\n                    height={180}\r\n                    elasticX={true}\r\n                    colors={\"#fcba03\"}\r\n                    title={(d) => `${d.key} : $ ${Math.round(d.value * 10000)} `}\r\n                  />\r\n                </Col>\r\n                <Col>\r\n                  <p> Cost By Activity Class </p>\r\n                  <RowChart\r\n                    dimension={activity2Dim}\r\n                    group={activity2Count}\r\n                    height={180}\r\n                    transitionDuration={300}\r\n                    elasticX={true}\r\n                    colors={\"#fcba03\"}\r\n                    title={(d) => `${d.key} : $ ${Math.round(d.value * 10000)} `}\r\n                  />\r\n                </Col>\r\n                <Col>\r\n                  <p> Cost by ONRC Outcome </p>\r\n                  <RowChart\r\n                    dimension={outcome2Dim}\r\n                    group={outcome2Count}\r\n                    height={180}\r\n                    elasticX={true}\r\n                    colors={\"#fcba03\"}\r\n                    title={(d) => `${d.key} : $ ${Math.round(d.value * 10000)} `}\r\n                  />\r\n                </Col>\r\n        </Row>\r\n      </ChartContext>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n",{"ruleId":"53","severity":1,"message":"54","line":5,"column":19,"nodeType":"55","messageId":"56","endLine":5,"endColumn":29},{"ruleId":"53","severity":1,"message":"57","line":1,"column":17,"nodeType":"55","messageId":"56","endLine":1,"endColumn":25},{"ruleId":"53","severity":1,"message":"58","line":3,"column":10,"nodeType":"55","messageId":"56","endLine":3,"endColumn":14},{"ruleId":"53","severity":1,"message":"59","line":4,"column":13,"nodeType":"55","messageId":"56","endLine":4,"endColumn":20},{"ruleId":"53","severity":1,"message":"60","line":5,"column":13,"nodeType":"55","messageId":"56","endLine":5,"endColumn":20},{"ruleId":"53","severity":1,"message":"61","line":62,"column":9,"nodeType":"55","messageId":"56","endLine":62,"endColumn":16},{"ruleId":"53","severity":1,"message":"62","line":16,"column":13,"nodeType":"55","messageId":"56","endLine":16,"endColumn":29},{"ruleId":"63","severity":1,"message":"64","line":21,"column":35,"nodeType":"65","messageId":"66","endLine":21,"endColumn":37},"no-unused-vars","'ReportsOne' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Link' is defined but never used.","'FaIcons' is defined but never used.","'AiIcons' is defined but never used.","'sidebar' is assigned a value but never used.","'dateFormatParser' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]